/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as MisfitsIndexRouteImport } from './routes/misfits/index'
<<<<<<< HEAD
import { Route as DemoStartServerFuncsRouteImport } from './routes/demo.start.server-funcs'
import { Route as DemoStartApiRequestRouteImport } from './routes/demo.start.api-request'
=======
>>>>>>> 652bfaa (Upgrade start, install clerk, setup convex with clerk & start)

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const MisfitsIndexRoute = MisfitsIndexRouteImport.update({
  id: '/misfits/',
  path: '/misfits/',
  getParentRoute: () => rootRouteImport,
} as any)
<<<<<<< HEAD
const DemoStartServerFuncsRoute = DemoStartServerFuncsRouteImport.update({
  id: '/demo/start/server-funcs',
  path: '/demo/start/server-funcs',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartApiRequestRoute = DemoStartApiRequestRouteImport.update({
  id: '/demo/start/api-request',
  path: '/demo/start/api-request',
  getParentRoute: () => rootRouteImport,
} as any)
=======
>>>>>>> 652bfaa (Upgrade start, install clerk, setup convex with clerk & start)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/misfits': typeof MisfitsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/misfits': typeof MisfitsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/misfits/': typeof MisfitsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/misfits'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/misfits'
  id: '__root__' | '/' | '/misfits/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  MisfitsIndexRoute: typeof MisfitsIndexRoute
<<<<<<< HEAD
  DemoStartApiRequestRoute: typeof DemoStartApiRequestRoute
  DemoStartServerFuncsRoute: typeof DemoStartServerFuncsRoute
=======
>>>>>>> 652bfaa (Upgrade start, install clerk, setup convex with clerk & start)
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/misfits/': {
      id: '/misfits/'
      path: '/misfits'
      fullPath: '/misfits'
      preLoaderRoute: typeof MisfitsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
<<<<<<< HEAD
    '/demo/start/server-funcs': {
      id: '/demo/start/server-funcs'
      path: '/demo/start/server-funcs'
      fullPath: '/demo/start/server-funcs'
      preLoaderRoute: typeof DemoStartServerFuncsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/api-request': {
      id: '/demo/start/api-request'
      path: '/demo/start/api-request'
      fullPath: '/demo/start/api-request'
      preLoaderRoute: typeof DemoStartApiRequestRouteImport
      parentRoute: typeof rootRouteImport
    }
=======
>>>>>>> 652bfaa (Upgrade start, install clerk, setup convex with clerk & start)
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  MisfitsIndexRoute: MisfitsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
